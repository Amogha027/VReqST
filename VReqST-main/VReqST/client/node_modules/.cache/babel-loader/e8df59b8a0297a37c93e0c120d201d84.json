{"ast":null,"code":"var _jsxFileName = \"/home/amogha/btp/VReqST-e2220b1081924feff8bfe2cc9e536fbceae8bc39/VReqST-main/VReqST/client/src/Components/Dashboard/Dashboard.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Flex, Grid, GridItem, Heading, Stack, Text, useBreakpointValue, useColorModeValue, useToast, VStack, Link as CLink, Image, Center } from \"@chakra-ui/react\";\nimport ProjectRow from \"../Project/ProjectRow\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport FileRow from \"../MyFiles/FileRow\";\nimport { Link } from \"react-router-dom\";\n\nconst Dashboard = ({\n  auth\n}) => {\n  const date = new Date();\n  let hours = date.getHours();\n  let greet = {\n    message: \"\",\n    image: \"\"\n  }; // if (hours < 12) {\n  //   greet.message = \" Good Morning, \" + auth.user.name.split(\" \")[0];\n  //   greet.image = \"url(https://wallpapercave.com/wp/wp2833173.jpg)\";\n  // } else if (hours <= 17 && hours >= 12) {\n  //   greet.message = \" Good Afternoon, \" + auth.user.name.split(\" \")[0];\n  //   greet.image = \"url(https://wallpapercave.com/wp/wp2833173.jpg)\";\n  // } else {\n  //   greet.message = \" Good Evening, \" + auth.user.name.split(\" \")[0];\n  //   greet.image =\n  //     \"url(https://images.wallpaperscraft.com/image/single/sunset_dark_twilight_148787_1920x1080.jpg)\";\n  // }\n\n  const [recentProjects, setRecentProjects] = useState([]);\n  const [recentFiles, setRecentFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const getRecentProjects = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n\n    try {\n      const requestOptions = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        }\n      };\n      const res = await Axios.get(\"http://localhost:5002/api/project/recent\", requestOptions);\n      setRecentProjects(res.data);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\"\n      });\n      console.log(error);\n    }\n  };\n\n  const getRecentFiles = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n\n    try {\n      const requestOptions = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        }\n      };\n      const res = await Axios.get(\"http://localhost:5002/api/json/recent\", requestOptions);\n      setRecentFiles(res.data);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\"\n      });\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const f = async () => {\n      setLoading(true);\n      await getRecentProjects();\n      await getRecentFiles();\n      setLoading(false);\n    };\n\n    f();\n  }, []);\n  return React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"hello there this is many words in\") // <Box minH={\"85vh\"}>\n  //   <Stack minH={\"25vh\"} direction={{ base: \"column\", md: \"row\" }}>\n  //     <Flex p={8} flex={1} align={\"center\"} justify={\"center\"}>\n  //       <Stack spacing={6} w={\"full\"} maxW={\"lg\"}>\n  //         <Heading fontSize={{ base: \"3xl\", md: \"4xl\", lg: \"5xl\" }}>\n  //           <Text\n  //             color={\"black\"}\n  //             as={\"span\"}\n  //             position={\"relative\"}\n  //             _after={{\n  //               content: \"''\",\n  //               width: \"full\",\n  //               height: useBreakpointValue({ base: \"20%\", md: \"30%\" }),\n  //               position: \"absolute\",\n  //               bottom: 1,\n  //               left: 0,\n  //               bg: \"blue.400\",\n  //               zIndex: -1,\n  //             }}\n  //           >\n  //             Hello,{\" \"}\n  //           </Text>\n  //           <Text color={\"blue.400\"} as={\"span\"}>\n  //             {auth.user.name.split(\" \")[0]}! ðŸ‘‹\n  //           </Text>{\" \"}\n  //         </Heading>\n  //       </Stack>\n  //     </Flex>\n  //     <Flex flex={1}>\n  //       <Image\n  //         alt={\"Login Image\"}\n  //         objectFit={\"cover\"}\n  //         src={\"/assets/banner.png\"}\n  //         maxW='300px'\n  //       />\n  //     </Flex>\n  //   </Stack>\n  //   <Grid templateColumns='repeat(2, 1fr)' gap={4} p={8}>\n  //     <GridItem\n  //       maxH='25em'\n  //       overflow='auto'\n  //       bg={useColorModeValue(\"white\", \"gray.800\")}\n  //       boxShadow={\"lg\"}\n  //       p={8}\n  //       rounded={\"xl\"}\n  //       align={\"center\"}\n  //       pos={\"relative\"}\n  //       _after={{\n  //         content: `\"\"`,\n  //         w: 0,\n  //         h: 0,\n  //         borderLeft: \"solid transparent\",\n  //         borderLeftWidth: 16,\n  //         borderRight: \"solid transparent\",\n  //         borderRightWidth: 16,\n  //         borderTop: \"solid\",\n  //         borderTopWidth: 16,\n  //         borderTopColor: useColorModeValue(\"white\", \"white\"),\n  //         pos: \"absolute\",\n  //         bottom: \"-16px\",\n  //         left: \"50%\",\n  //         transform: \"translateX(-50%)\",\n  //       }}\n  //     >\n  //       <Heading pt={5} pl={5} fontSize='2xl'>\n  //         Recent Projects\n  //       </Heading>\n  //       <Box p={5}>\n  //         {recentProjects.length > 0 ? (\n  //           recentProjects.map((p) => (\n  //             <ProjectRow\n  //               key={p._id}\n  //               name={p.name}\n  //               projid={p._id}\n  //               isFinished={p.isFinished}\n  //               dash\n  //             />\n  //           ))\n  //         ) : (\n  //           <>\n  //             <Text>No recent projects!</Text>\n  //             <CLink as={Link} to=\"/projects\">Create project</CLink>\n  //           </>\n  //         )}\n  //       </Box>\n  //     </GridItem>\n  //     <GridItem\n  //       overflow='auto'\n  //       bg={useColorModeValue(\"white\", \"gray.800\")}\n  //       boxShadow={\"lg\"}\n  //       p={8}\n  //       rounded={\"xl\"}\n  //       align={\"center\"}\n  //       maxH='25em'\n  //       pos={\"relative\"}\n  //       _after={{\n  //         content: `\"\"`,\n  //         w: 0,\n  //         h: 0,\n  //         borderLeft: \"solid transparent\",\n  //         borderLeftWidth: 16,\n  //         borderRight: \"solid transparent\",\n  //         borderRightWidth: 16,\n  //         borderTop: \"solid\",\n  //         borderTopWidth: 16,\n  //         borderTopColor: useColorModeValue(\"white\", \"gray.800\"),\n  //         pos: \"absolute\",\n  //         bottom: \"-16px\",\n  //         left: \"50%\",\n  //         transform: \"translateX(-50%)\",\n  //       }}\n  //     >\n  //       <Heading pt={5} pl={5} fontSize='2xl'>\n  //         Recent Validators\n  //       </Heading>\n  //       <Box p={5}>\n  //         {recentFiles.length > 0 ? (\n  //           recentFiles.map((p) => (\n  //             <Link to={\"/myfiles\"}>\n  //               <FileRow name={p.name} dash />\n  //             </Link>\n  //           ))\n  //         ) : (\n  //           <>\n  //             <Text>No recent Validators!</Text>\n  //             <CLink as={Link} to='/myfiles'>Add Validator</CLink>\n  //           </>\n  //         )}\n  //       </Box>\n  //     </GridItem>\n  //   </Grid>\n  // </Box>\n  ;\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/home/amogha/btp/VReqST-e2220b1081924feff8bfe2cc9e536fbceae8bc39/VReqST-main/VReqST/client/src/Components/Dashboard/Dashboard.jsx"],"names":["React","useEffect","useState","Box","Flex","Grid","GridItem","Heading","Stack","Text","useBreakpointValue","useColorModeValue","useToast","VStack","Link","CLink","Image","Center","ProjectRow","connect","Axios","FileRow","Dashboard","auth","date","Date","hours","getHours","greet","message","image","recentProjects","setRecentProjects","recentFiles","setRecentFiles","loading","setLoading","toast","getRecentProjects","jwttoken","localStorage","getItem","requestOptions","headers","token","res","get","data","error","title","status","duration","isClosable","position","console","log","getRecentFiles","f","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  Stack,\n  Text,\n  useBreakpointValue,\n  useColorModeValue,\n  useToast,\n  VStack,\n  Link as CLink,\n  Image,\n  Center,\n} from \"@chakra-ui/react\";\nimport ProjectRow from \"../Project/ProjectRow\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport FileRow from \"../MyFiles/FileRow\";\nimport { Link } from \"react-router-dom\";\n\nconst Dashboard = ({ auth }) => {\n  const date = new Date();\n  let hours = date.getHours();\n  let greet = { message: \"\", image: \"\" };\n\n  // if (hours < 12) {\n  //   greet.message = \" Good Morning, \" + auth.user.name.split(\" \")[0];\n  //   greet.image = \"url(https://wallpapercave.com/wp/wp2833173.jpg)\";\n  // } else if (hours <= 17 && hours >= 12) {\n  //   greet.message = \" Good Afternoon, \" + auth.user.name.split(\" \")[0];\n  //   greet.image = \"url(https://wallpapercave.com/wp/wp2833173.jpg)\";\n  // } else {\n  //   greet.message = \" Good Evening, \" + auth.user.name.split(\" \")[0];\n  //   greet.image =\n  //     \"url(https://images.wallpaperscraft.com/image/single/sunset_dark_twilight_148787_1920x1080.jpg)\";\n  // }\n\n  const [recentProjects, setRecentProjects] = useState([]);\n  const [recentFiles, setRecentFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const getRecentProjects = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.get(\n        \"http://localhost:5002/api/project/recent\",\n        requestOptions\n      );\n\n      setRecentProjects(res.data);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  };\n\n  const getRecentFiles = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.get(\n        \"http://localhost:5002/api/json/recent\",\n        requestOptions\n      );\n\n      setRecentFiles(res.data);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const f = async () => {\n      setLoading(true);\n      await getRecentProjects();\n      await getRecentFiles();\n      setLoading(false);\n    };\n    f();\n  }, []);\n\n  return (\n    <Text>hello there this is many words in</Text>\n    // <Box minH={\"85vh\"}>\n    //   <Stack minH={\"25vh\"} direction={{ base: \"column\", md: \"row\" }}>\n    //     <Flex p={8} flex={1} align={\"center\"} justify={\"center\"}>\n    //       <Stack spacing={6} w={\"full\"} maxW={\"lg\"}>\n    //         <Heading fontSize={{ base: \"3xl\", md: \"4xl\", lg: \"5xl\" }}>\n    //           <Text\n    //             color={\"black\"}\n    //             as={\"span\"}\n    //             position={\"relative\"}\n    //             _after={{\n    //               content: \"''\",\n    //               width: \"full\",\n    //               height: useBreakpointValue({ base: \"20%\", md: \"30%\" }),\n    //               position: \"absolute\",\n    //               bottom: 1,\n    //               left: 0,\n    //               bg: \"blue.400\",\n    //               zIndex: -1,\n    //             }}\n    //           >\n    //             Hello,{\" \"}\n    //           </Text>\n    //           <Text color={\"blue.400\"} as={\"span\"}>\n    //             {auth.user.name.split(\" \")[0]}! ðŸ‘‹\n    //           </Text>{\" \"}\n    //         </Heading>\n    //       </Stack>\n    //     </Flex>\n    //     <Flex flex={1}>\n    //       <Image\n    //         alt={\"Login Image\"}\n    //         objectFit={\"cover\"}\n    //         src={\"/assets/banner.png\"}\n    //         maxW='300px'\n    //       />\n    //     </Flex>\n    //   </Stack>\n    //   <Grid templateColumns='repeat(2, 1fr)' gap={4} p={8}>\n    //     <GridItem\n    //       maxH='25em'\n    //       overflow='auto'\n    //       bg={useColorModeValue(\"white\", \"gray.800\")}\n    //       boxShadow={\"lg\"}\n    //       p={8}\n    //       rounded={\"xl\"}\n    //       align={\"center\"}\n    //       pos={\"relative\"}\n    //       _after={{\n    //         content: `\"\"`,\n    //         w: 0,\n    //         h: 0,\n    //         borderLeft: \"solid transparent\",\n    //         borderLeftWidth: 16,\n    //         borderRight: \"solid transparent\",\n    //         borderRightWidth: 16,\n    //         borderTop: \"solid\",\n    //         borderTopWidth: 16,\n    //         borderTopColor: useColorModeValue(\"white\", \"white\"),\n    //         pos: \"absolute\",\n    //         bottom: \"-16px\",\n    //         left: \"50%\",\n    //         transform: \"translateX(-50%)\",\n    //       }}\n    //     >\n    //       <Heading pt={5} pl={5} fontSize='2xl'>\n    //         Recent Projects\n    //       </Heading>\n    //       <Box p={5}>\n    //         {recentProjects.length > 0 ? (\n    //           recentProjects.map((p) => (\n    //             <ProjectRow\n    //               key={p._id}\n    //               name={p.name}\n    //               projid={p._id}\n    //               isFinished={p.isFinished}\n    //               dash\n    //             />\n    //           ))\n    //         ) : (\n    //           <>\n    //             <Text>No recent projects!</Text>\n    //             <CLink as={Link} to=\"/projects\">Create project</CLink>\n    //           </>\n    //         )}\n    //       </Box>\n    //     </GridItem>\n    //     <GridItem\n    //       overflow='auto'\n    //       bg={useColorModeValue(\"white\", \"gray.800\")}\n    //       boxShadow={\"lg\"}\n    //       p={8}\n    //       rounded={\"xl\"}\n    //       align={\"center\"}\n    //       maxH='25em'\n    //       pos={\"relative\"}\n    //       _after={{\n    //         content: `\"\"`,\n    //         w: 0,\n    //         h: 0,\n    //         borderLeft: \"solid transparent\",\n    //         borderLeftWidth: 16,\n    //         borderRight: \"solid transparent\",\n    //         borderRightWidth: 16,\n    //         borderTop: \"solid\",\n    //         borderTopWidth: 16,\n    //         borderTopColor: useColorModeValue(\"white\", \"gray.800\"),\n    //         pos: \"absolute\",\n    //         bottom: \"-16px\",\n    //         left: \"50%\",\n    //         transform: \"translateX(-50%)\",\n    //       }}\n    //     >\n    //       <Heading pt={5} pl={5} fontSize='2xl'>\n    //         Recent Validators\n    //       </Heading>\n    //       <Box p={5}>\n    //         {recentFiles.length > 0 ? (\n    //           recentFiles.map((p) => (\n    //             <Link to={\"/myfiles\"}>\n    //               <FileRow name={p.name} dash />\n    //             </Link>\n    //           ))\n    //         ) : (\n    //           <>\n    //             <Text>No recent Validators!</Text>\n    //             <CLink as={Link} to='/myfiles'>Add Validator</CLink>\n    //           </>\n    //         )}\n    //       </Box>\n    //     </GridItem>\n    //   </Grid>\n    // </Box>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}