{"ast":null,"code":"var _jsxFileName = \"/home/amogha/btp/VReqST-e2220b1081924feff8bfe2cc9e536fbceae8bc39/VReqST-main/VReqST/client/src/Components/Project/DropArea.jsx\";\nimport { Box, Text, Button, Stack } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { useDrop } from \"react-dnd\";\n\nconst DropArea = () => {\n  const [board, setBoard] = useState([]);\n  const [{\n    isOver,\n    canDrop\n  }, drop] = useDrop(() => ({\n    accept: \"behaviour\",\n    drop: (item, monitor) => addToBoard(item, monitor),\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  }));\n\n  const addToBoard = (item, monitor) => {\n    console.log(item.obj);\n    const dragIndex = monitor.getItem().index;\n    console.log(dragIndex);\n    const hoverIndex = board.length; // if (dragIndex !== undefined) {\n    //   const dragged = board[dragIndex];\n    //   const newBoard = [...board];\n    //   newBoard.splice(dragIndex, 1);\n    //   newBoard.splice(hoverIndex, 0, dragged);\n    //   setBoard(newBoard);\n    // } else {\n    //   setBoard([...board, item.obj]);\n    // }\n\n    setBoard(board => [...board, item.obj]);\n  };\n\n  const handleReorder = (dragIndex, hoverIndex) => {\n    const dragged = board[dragIndex];\n    const newBoard = [...board];\n    newBoard.splice(dragIndex, 1);\n    newBoard.splice(hoverIndex, 0, dragged);\n    setBoard(newBoard);\n  };\n\n  return board.length > 0 ? React.createElement(Box, {\n    ref: drop,\n    width: 400,\n    height: 500,\n    border: \"1px solid\",\n    position: \"relative\",\n    maxHeight: 500,\n    overflowY: \"auto\",\n    justifyContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Stack, {\n    py: 4,\n    direction: \"column\",\n    paddingLeft: 5,\n    paddingRight: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, board.map((p, index) => React.createElement(Button, {\n    backgroundColor: \"blue.200\",\n    height: 10,\n    width: \"auto\",\n    draggable: true,\n    onDragStart: e => {\n      e.dataTransfer.setData('text/plain', index);\n      e.dataTransfer.effectAllowed = \"move\";\n    },\n    onDragOver: e => {\n      e.preventDefault();\n    },\n    onDrop: e => {\n      const dragIndex = parseInt(e.dataTransfer.getData('text/plain'), 10);\n      const hoverIndex = index;\n\n      if (dragIndex != hoverIndex) {\n        handleReorder(dragIndex, hoverIndex);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, p.rulename))))) : React.createElement(Box, {\n    ref: drop,\n    width: 400,\n    height: 500,\n    border: \"1px solid\",\n    position: \"relative\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Text, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Drop Here\"));\n};\n\nexport default DropArea; // <Text fontSize='xl'>\n//   <a\n//     onClick={() => {\n//       // setRule(p);\n//       console.log(p);\n//       // if (perdata.length > 0) {\n//       //   setPerdata(\n//       //     perdata +\n//       //     `,{\"rulename\":\"${p.rulename\n//       //     }\", \"description\":\"${p.description\n//       //     }\",\"logic\": \"${btoa(\n//       //       p.data_name\n//       //     )}\"}\\n`\n//       //   );\n//       // } else {\n//       //   setPerdata(\n//       //     perdata +\n//       //     `{\"rulename\":\"${p.rulename\n//       //     }\", \"description\":\"${p.description\n//       //     }\",\"logic\": \"${btoa(\n//       //       p.data_name\n//       //     )}\"}\\n`\n//       //   );\n//       // }\n//     }}\n//     color=\"white\"\n//   >\n//     {p.rulename}\n//   </a>\n// </Text>","map":{"version":3,"sources":["/home/amogha/btp/VReqST-e2220b1081924feff8bfe2cc9e536fbceae8bc39/VReqST-main/VReqST/client/src/Components/Project/DropArea.jsx"],"names":["Box","Text","Button","Stack","React","useState","useDrop","DropArea","board","setBoard","isOver","canDrop","drop","accept","item","monitor","addToBoard","collect","console","log","obj","dragIndex","getItem","index","hoverIndex","length","handleReorder","dragged","newBoard","splice","map","p","e","dataTransfer","setData","effectAllowed","preventDefault","parseInt","getData","rulename"],"mappings":"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","sourcesContent":["import { Box, Text, Button, Stack } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { useDrop } from \"react-dnd\";\n\nconst DropArea = () => {\n\tconst [board, setBoard] = useState([]);\n\n\tconst [{ isOver, canDrop }, drop] = useDrop(() => ({\n\t\taccept: \"behaviour\",\n\t\tdrop: (item, monitor) => addToBoard(item, monitor),\n\t\tcollect: (monitor) => ({\n\t\t\tisOver: !!monitor.isOver(),\n      canDrop: monitor.canDrop(),\n\t\t})\n\t}));\n\t\n\tconst addToBoard = (item, monitor) => {\n\t\tconsole.log(item.obj);\n\t\tconst dragIndex = monitor.getItem().index;\n\t\tconsole.log(dragIndex);\n    const hoverIndex = board.length;\n    // if (dragIndex !== undefined) {\n    //   const dragged = board[dragIndex];\n    //   const newBoard = [...board];\n    //   newBoard.splice(dragIndex, 1);\n    //   newBoard.splice(hoverIndex, 0, dragged);\n    //   setBoard(newBoard);\n    // } else {\n    //   setBoard([...board, item.obj]);\n    // }\n\t\tsetBoard((board) => [...board, item.obj]);\n\t};\n\n\tconst handleReorder = (dragIndex, hoverIndex) => {\n\t\tconst dragged = board[dragIndex];\n\t\tconst newBoard = [...board];\n\t\tnewBoard.splice(dragIndex, 1);\n\t\tnewBoard.splice(hoverIndex, 0, dragged);\n\t\tsetBoard(newBoard);\n\t}\n\n\treturn (\n\t\tboard.length > 0 ? (\n\t\t\t<Box\n\t\t\t\tref={drop}\n\t\t\t\twidth={400}\n\t\t\t\theight={500}\n\t\t\t\tborder='1px solid'\n\t\t\t\tposition='relative'\n\t\t\t\tmaxHeight={500}\n\t\t\t\toverflowY='auto'\n\t\t\t\tjustifyContent='center'\n\t\t\t>\n\t\t\t\t<Stack\n\t\t\t\t\tpy={4}\n\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\tpaddingLeft={5}\n\t\t\t\t\tpaddingRight={5}\n\t\t\t\t>\n\t\t\t\t\t{board.map((p, index) => (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tbackgroundColor='blue.200'\n\t\t\t\t\t\t\theight={10}\n\t\t\t\t\t\t\twidth='auto'\n\t\t\t\t\t\t\tdraggable\n\t\t\t\t\t\t\tonDragStart={(e) => {\n\t\t\t\t\t\t\t\te.dataTransfer.setData('text/plain', index);\n\t\t\t\t\t\t\t\te.dataTransfer.effectAllowed = \"move\";\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonDragOver={(e) => {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonDrop={(e) => {\n\t\t\t\t\t\t\t\tconst dragIndex = parseInt(e.dataTransfer.getData('text/plain'), 10);\n\t\t\t\t\t\t\t\tconst hoverIndex = index;\n\t\t\t\t\t\t\t\tif (dragIndex != hoverIndex) {\n\t\t\t\t\t\t\t\t\thandleReorder(dragIndex, hoverIndex);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tfontSize='xl'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{p.rulename}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t))}\n\t\t\t\t</Stack>\n\t\t\t</Box>\n\t\t) : (\n\t\t\t<Box\n\t\t\t\tref={drop}\n\t\t\t\twidth={400}\n\t\t\t\theight={500}\n\t\t\t\tborder='1px solid'\n\t\t\t\tposition='relative'\n\t\t\t\tjustifyContent='center'\n\t\t\t\talignItems='center'\n\t\t\t>\n\t\t\t\t<Text\n\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t>Drop Here</Text>\n\t\t\t</Box>\n\t\t)\n\t)\n};\n\nexport default DropArea;\n\n\n\n\n// <Text fontSize='xl'>\n//   <a\n//     onClick={() => {\n//       // setRule(p);\n//       console.log(p);\n//       // if (perdata.length > 0) {\n//       //   setPerdata(\n//       //     perdata +\n//       //     `,{\"rulename\":\"${p.rulename\n//       //     }\", \"description\":\"${p.description\n//       //     }\",\"logic\": \"${btoa(\n//       //       p.data_name\n//       //     )}\"}\\n`\n//       //   );\n//       // } else {\n//       //   setPerdata(\n//       //     perdata +\n//       //     `{\"rulename\":\"${p.rulename\n//       //     }\", \"description\":\"${p.description\n//       //     }\",\"logic\": \"${btoa(\n//       //       p.data_name\n//       //     )}\"}\\n`\n//       //   );\n//       // }\n//     }}\n//     color=\"white\"\n//   >\n//     {p.rulename}\n//   </a>\n// </Text>"]},"metadata":{},"sourceType":"module"}