{"ast":null,"code":"var _jsxFileName = \"/home/amogha/btp/VReqST-e2220b1081924feff8bfe2cc9e536fbceae8bc39/VReqST-main/VReqST/client/src/Components/Project/DropArea.jsx\";\nimport { Flex, Text } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { useDrop } from \"react-dnd\";\n\nconst DropArea = () => {\n  const [board, setBoard] = useState([]);\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"behaviour\",\n    drop: item => addToBoard(item),\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n\n  const addToBoard = obj => {\n    console.log(obj);\n  };\n\n  return React.createElement(Flex, {\n    ref: drop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, board.length > 0 ? React.createElement(React.Fragment, null, \"board.map((p) => \", React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, p.rulename), \")\") : React.createElement(React.Fragment, null, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Drop Here\")));\n};\n\nexport default DropArea;","map":{"version":3,"sources":["/home/amogha/btp/VReqST-e2220b1081924feff8bfe2cc9e536fbceae8bc39/VReqST-main/VReqST/client/src/Components/Project/DropArea.jsx"],"names":["Flex","Text","React","useState","useDrop","DropArea","board","setBoard","isOver","drop","accept","item","addToBoard","collect","monitor","obj","console","log","length","p","rulename"],"mappings":";AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,kBAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAAC;AAAEK,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBL,OAAO,CAAC,OAAO;AACzCM,IAAAA,MAAM,EAAE,WADiC;AAEzCD,IAAAA,IAAI,EAAGE,IAAD,IAAUC,UAAU,CAACD,IAAD,CAFe;AAGzCE,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACtBN,MAAAA,MAAM,EAAE,CAAC,CAACM,OAAO,CAACN,MAAR;AADY,KAAd;AAHgC,GAAP,CAAD,CAAlC;;AAQA,QAAMI,UAAU,GAAIG,GAAD,IAAS;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAFD;;AAIA,SACC,oBAAC,IAAD;AACC,IAAA,GAAG,EAAEN,IADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGEH,KAAK,CAACY,MAAN,GAAe,CAAf,GACA,+DAEC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,CAAC,CAACC,QAAT,CAFD,MADA,GAOA,0CACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,CAVF,CADD;AAiBA,CAhCD;;AAkCA,eAAef,QAAf","sourcesContent":["import { Flex, Text } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { useDrop } from \"react-dnd\";\n\nconst DropArea = () => {\n\tconst [board, setBoard] = useState([]);\n\n\tconst [{ isOver }, drop] = useDrop(() => ({\n\t\taccept: \"behaviour\",\n\t\tdrop: (item) => addToBoard(item),\n\t\tcollect: (monitor) => ({\n\t\t\tisOver: !!monitor.isOver(),\n\t\t})\n\t}));\n\t\n\tconst addToBoard = (obj) => {\n\t\t\tconsole.log(obj);\n\t};\n\n\treturn (\n\t\t<Flex\n\t\t\tref={drop}\n\t\t>\n\t\t\t{board.length > 0 ? (\n\t\t\t\t<>\n\t\t\t\tboard.map((p) => {\n\t\t\t\t\t<Text>{p.rulename}</Text>\n\t\t\t\t})\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<Text>Drop Here</Text>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Flex>\n\t)\n};\n\nexport default DropArea;"]},"metadata":{},"sourceType":"module"}